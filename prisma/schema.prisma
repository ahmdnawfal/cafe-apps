// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  image     String?
  email     String   @unique
  password  String
  role      role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  image             String
  category          String
  description       String
  price             Float
  transactionsItems TransactionsItem[]
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt

  @@map("products")
}

model Transaction {
  id                  String             @id @map("_id")
  total               Int
  status              payment_status
  customerName        String
  customerEmail       String
  customerPhone       String
  customerTableNumber Int
  snapToken           String?
  snapRedirectUrl     String?
  paymentMethod       String?
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  transactionsItems   TransactionsItem[]

  @@map("transactions")
}

model TransactionsItem {
  id            String      @id @map("_id")
  quantity      Int
  price         Float
  productName   String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  transactionId String
  transactions  Transaction @relation(fields: [transactionId], references: [id])
  productId     String      @db.ObjectId
  product       Product     @relation(fields: [productId], references: [id])

  @@map("transactionsItems")
}

enum payment_status {
  PENDING
  PAID
  CANCELED
}

enum role {
  ADMIN
  USER
}
